class Node {
    int item         moves_as isLocal(this) ? threadlocal : readonly;
    Node next        moves_as isLocal(this) ? threadlocal : readonly;

    Node(int item, Node next) {
      this.item = item;
      this.next = next;
    }
}

class Stack {

    Node head moves_as isLocal(this) ? threadlocal : guarded_by this;

    public Stack() {
      this.head = null;
    }

  public void push(int item) {
    acquire(this);
    Node node = new Node(item, this.head);
    this.head = node;
    release(this);
  }

  public int pop() {
    acquire(this);
      if (this.head == null) {
        release(this);
        return -1;
      }
    int value = this.head.item;
    this.head = this.head.next;
    release(this);
    return value;
  }
}
